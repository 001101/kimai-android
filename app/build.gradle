apply plugin: 'com.android.application'
if (enable_plugin_kotlin) {
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
    apply plugin: 'kotlin-kapt'
}

ext.version_setup_minSdk = 14

android {
    buildToolsVersion version_setup_buildTools
    compileSdkVersion version_setup_compileSdk
    flavorDimensions "default"

    defaultConfig {
        minSdkVersion version_setup_minSdk
        targetSdkVersion version_setup_targetSdk
        buildConfigField "boolean", "IS_TEST_BUILD", "false"
        buildConfigField "boolean", "IS_GPLAY_BUILD", "false"
        buildConfigField "String[]", "DETECTED_ANDROID_LOCALES", "${findUsedAndroidLocales()}"
        buildConfigField "String", "GITHASH", "\"${getGitHash()}\""

        applicationId "de.live.gdev.timetracker"
        versionName "1.3.13"
        versionCode 26

    }

    productFlavors {
        flavorDefault {
        }

        flavorGplay {
            buildConfigField "boolean", "IS_GPLAY_BUILD", "true"
        }

        flavorTest {
            applicationId "net.gsantner.kimaitt_test"
            versionCode = Integer.parseInt(new Date().format('yyMMdd'))
            versionName = new Date().format('yyMMdd')
            buildConfigField "boolean", "IS_TEST_BUILD", "true"
        }
    }

    sourceSets {
        if (enable_plugin_kotlin) {
            main.java.srcDirs += 'src/main/kotlin'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    configurations.all {
        resolutionStrategy {
            eachDependency { details ->
                if (details.requested.group == 'com.android.support') {
                    if (details.requested.name != 'multidex' && details.requested.name != 'multidex-instrumentation') {
                        details.useVersion "${version_library_appcompat}"
                    }
                }
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
    }

    lintOptions {
        disable 'MissingTranslation'
        disable 'InvalidPackage'
    }

    sourceSets {
        main {
            manifest.srcFile '../wawl/AndroidManifest.xml'
            java.srcDirs = ['src/main/java', '../wawl/java']
            res.srcDirs = ['src/main/res', '../wawl/res']
        }
        if (enable_plugin_kotlin) {
            main.java.srcDirs += 'src/main/kotlin'
        }
    }
    sourceSets { main { java.srcDirs = ['src/main/java', '../src/wawl/java'] } }
    sourceSets { main { java.srcDirs = ['src/main/java', '../wawl/java/'] } }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'

    // Android standard libs
    implementation "com.android.support:appcompat-v7:${version_library_appcompat}"
    implementation "com.android.support:design:${version_library_appcompat}"
    implementation "com.android.support:support-v4:${version_library_appcompat}"
    implementation "com.android.support:preference-v7:${version_library_appcompat}"
    implementation "com.android.support:preference-v14:${version_library_appcompat}"

    // Tool libraries
    implementation 'org.apache.httpcomponents:httpcore:4.4.3'
    implementation "com.jakewharton:butterknife:${version_library_butterknife}"
    if (enable_plugin_kotlin) {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$version_plugin_kotlin"
    }

    // Processors
    def anpros = ["com.jakewharton:butterknife-compiler:${version_library_butterknife}"]
    for (anpro in anpros) {
        if (enable_plugin_kotlin) {
            kapt anpro
        } else {
            annotationProcessor anpro
        }
    }
}
